Index: src/main/java/com/workonline/desktop/EditContainerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.workonline.desktop;\r\n\r\nimport com.workonline.util.Message;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.stage.Stage;\r\nimport javafx.stage.WindowEvent;\r\n\r\nimport java.io.*;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport static com.workonline.desktop.StageUtils.getStage;\r\n\r\n/**\r\n * 编辑页面的主容器\r\n */\r\npublic class EditContainerController implements IController {\r\n    static EditContainerController self;\r\n    public static EditContainerController getInstance(){\r\n        return self;\r\n    }\r\n    String username;\r\n\r\n\r\n    HashMap<Integer,Tab> tab_list = new HashMap<>();\r\n\r\n    @FXML\r\n    TabPane tabPane_container;\r\n    @FXML\r\n    AnchorPane root;\r\n    /**\r\n     * 本Controller对应的stage 单例\r\n     */\r\n    @FXML\r\n    public static Stage stage;\r\n\r\n    /**\r\n     * 关于页面的stage，是个单例。\r\n     */\r\n    Stage about_stage = getStage(600,400,\"about_view.fxml\",\"关于 协同办公\",600,400);\r\n\r\n    /**\r\n     * 构造函数 这是个单例，所以理论上只可能执行一次，在这里面添加接收到的方法，可以快捷操作这个类内部的变量。\r\n     * @throws IOException 抛出IO异常\r\n     */\r\n    public EditContainerController() throws IOException {\r\n        self = this;\r\n        MessageReceiver.r_commands.put(\"create_room_success\",(commands,message)->{\r\n            int roomid = Integer.getInteger(commands[1]);\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"editor_tab.fxml\"));\r\n            try {\r\n                Tab tab = fxmlLoader.load();\r\n                tab.setText(String.valueOf(roomid));\r\n                EditorTabController controller = fxmlLoader.getController();\r\n                controller.roomid = roomid;\r\n                controller.label_room_id.setText(\"房间ID：\"+roomid);\r\n                controller.label_room_people.setText(\"\");\r\n                controller.is_owner = true;\r\n                var map = new HashMap<String,Object>();\r\n                map.put(\"controller\",controller);\r\n                tab.setUserData(map);\r\n                tabPane_container.getTabs().add(tab);\r\n                tab_list.put(roomid,tab);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        MessageReceiver.r_commands.put(\"enter_room_success\",(commands, message) -> {\r\n            int roomid = Integer.getInteger(commands[1]);\r\n            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"editor_tab.fxml\"));\r\n            try {\r\n                EditorTabController controller = fxmlLoader.getController();\r\n                Tab tab = fxmlLoader.load();\r\n                tab.setText(String.valueOf(roomid));\r\n                controller.roomid = roomid;\r\n                controller.label_room_id.setText(\"房间ID：\"+roomid);\r\n                controller.label_room_people.setText(\"\");\r\n                var map = new HashMap<String,Object>();\r\n                map.put(\"controller\",controller);\r\n                tab.setUserData(map);\r\n                tabPane_container.getTabs().add(tab);\r\n                tab_list.put(roomid,tab);\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        MessageReceiver.r_commands.put(\"enter_room_fail\",(commands, message) -> {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"进入房间失败\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"房间号不存在，请检查房间号\");\r\n            alert.showAndWait();\r\n        });\r\n        MessageReceiver.r_commands.put(\"room_closed\",(commands, message) -> {\r\n            Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n            alert.setTitle(\"房间已关闭\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"房间已被房主关闭\");\r\n            alert.showAndWait();\r\n            int roomid = Integer.getInteger(commands[1]);\r\n            Tab tab = tab_list.get(roomid);\r\n            tabPane_container.getTabs().remove(tab);\r\n            tab_list.remove(roomid);\r\n        });\r\n    }\r\n\r\n\r\n    public void menuItemCreateRoomClick() throws IOException {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION,\"\",new ButtonType(\"新建文件\"),new ButtonType(\"打开现有文件\"));\r\n        alert.setHeaderText(null);\r\n        alert.setContentText(\"通过新建文件还是打开现有文件创建房间？\");\r\n        var ret = alert.showAndWait();\r\n        String filepath;\r\n        if(ret.isPresent() && ret.get().getText().equals(\"新建文件\")) {\r\n            FileChooser fileChooser = new FileChooser();\r\n            fileChooser.setTitle(\"新建文件\");\r\n            fileChooser.setInitialDirectory(new File(System.getProperty(\"user.home\")));\r\n            File file = fileChooser.showSaveDialog(stage);\r\n            if(file == null) return;\r\n            filepath = file.getPath();\r\n            Files.createFile(Paths.get(filepath));\r\n        }else {\r\n            FileChooser fileChooser = new FileChooser();\r\n            fileChooser.setTitle(\"选择文本文件\");\r\n            fileChooser.getExtensionFilters().addAll(\r\n                    new FileChooser.ExtensionFilter(\"文本文件\",\"*.txt\"),\r\n                    new FileChooser.ExtensionFilter(\"所有文件\",\"*.*\")\r\n            );\r\n            fileChooser.setInitialDirectory(new File(System.getProperty(\"user.home\")));\r\n            File file = fileChooser.showOpenDialog(stage);\r\n            if(file == null) return;\r\n            filepath = file.getPath();\r\n        }\r\n        String doc = Files.readString(Paths.get(filepath));\r\n        Message message = new Message();\r\n        message.command = \"create_room\";\r\n        message.document = doc;\r\n        MessageSender.sendMessage(message);\r\n    }\r\n\r\n    public void menuItemEnterRoomClick() {\r\n        TextInputDialog textInputDialog = new TextInputDialog();\r\n        textInputDialog.setTitle(\"提示\");\r\n        textInputDialog.setHeaderText(null);\r\n        textInputDialog.setContentText(\"请输入房间ID\");\r\n        var res = textInputDialog.showAndWait();\r\n        if(res.isPresent()){\r\n            String strid = res.get();\r\n            try {\r\n                Integer.getInteger(strid);\r\n            }catch(Exception e) {\r\n                return;\r\n            }\r\n            Message message = new Message();\r\n            message.command = \"enter \"+strid;\r\n            MessageSender.sendMessage(message);\r\n        }\r\n\r\n    }\r\n\r\n    public void menuItemQuitRoomClick() {\r\n        Tab tab = tabPane_container.getSelectionModel().getSelectedItem();\r\n        if(tab == null) return;\r\n        int roomid = ((EditorTabController) ((Map<?, ?>) tab.getUserData()).get(\"controller\")).roomid;\r\n        Message message = new Message();\r\n        message.command = \"quit_room \" + roomid;\r\n        MessageSender.sendMessage(message);\r\n        tabPane_container.getTabs().remove(tab);\r\n        tab_list.remove(roomid);\r\n\r\n    }\r\n\r\n    public void menuItemCloseRoomClick() {\r\n        Tab tab = tabPane_container.getSelectionModel().getSelectedItem();\r\n        if(tab == null) return;\r\n        EditorTabController controller = (EditorTabController) ((Map<?, ?>) tab.getUserData()).get(\"controller\");\r\n        boolean is_owner = controller.is_owner;\r\n        if(!is_owner){\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"错误\");\r\n            alert.setContentText(\"您不是房主\");\r\n            alert.setHeaderText(null);\r\n            alert.showAndWait();\r\n            return;\r\n        }\r\n\r\n        Message message = new Message();\r\n        message.command = \"close_room \"+controller.roomid;\r\n        MessageSender.sendMessage(message);\r\n    }\r\n\r\n    public void menuItemHelpClick(){\r\n        var res = System.getProperties();\r\n        for (var i : res.keySet()) {\r\n            System.out.println(i+\":\"+res.get(i));\r\n        }\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"editor_tab.fxml\"));\r\n\r\n        try {\r\n            Tab tab = fxmlLoader.load();\r\n            var controller = (EditorTabController) fxmlLoader.getController();\r\n            var map = new HashMap<String,Object>();\r\n            map.put(\"controller\",controller);\r\n            tab.setUserData(map);\r\n            controller.textArea_editor.textProperty().addListener(controller.textChanged);\r\n            tabPane_container.getTabs().add(tab);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    //撤销，复制，剪切，粘贴，查找，替换，字体\r\n    public void menuItemUndoClick(){\r\n        TextInputControl textInputControl = ((EditorTabController) ((Map<?, ?>) tabPane_container.getSelectionModel().getSelectedItem().getUserData()).get(\"controller\")).textArea_editor;\r\n        textInputControl.undo();\r\n    }\r\n    public void menuItemCopyClick(){\r\n        TextInputControl textInputControl = ((EditorTabController) ((Map<?, ?>) tabPane_container.getSelectionModel().getSelectedItem().getUserData()).get(\"controller\")).textArea_editor;\r\n        textInputControl.copy();\r\n    }\r\n    public void menuItemCutClick(){\r\n        TextInputControl textInputControl = ((EditorTabController) ((Map<?, ?>) tabPane_container.getSelectionModel().getSelectedItem().getUserData()).get(\"controller\")).textArea_editor;\r\n        textInputControl.cut();\r\n    }\r\n    public void menuItemPasteClick(){\r\n        TextInputControl textInputControl = ((EditorTabController) ((Map<?, ?>) tabPane_container.getSelectionModel().getSelectedItem().getUserData()).get(\"controller\")).textArea_editor;\r\n        textInputControl.paste();\r\n    }\r\n    public void menuItemFindClick(){\r\n        TextInputControl textInputControl = ((EditorTabController) ((Map<?, ?>) tabPane_container.getSelectionModel().getSelectedItem().getUserData()).get(\"controller\")).textArea_editor;\r\n\r\n    }\r\n    public void menuItemReplaceClick(){\r\n        TextInputControl textInputControl = ((EditorTabController) ((Map<?, ?>) tabPane_container.getSelectionModel().getSelectedItem().getUserData()).get(\"controller\")).textArea_editor;\r\n        textInputControl.paste();\r\n    }\r\n\r\n\r\n    /**\r\n     * 关于按钮点击事件\r\n     */\r\n    public void menuItemAboutClick(){\r\n        about_stage.show();\r\n    }\r\n\r\n    /** 实现接口方法\r\n     * @param stage 本Controller对应的stage\r\n     */\r\n    @Override\r\n    public void setStage(Stage stage) {\r\n        stage.setOnCloseRequest((e)->{\r\n            Alert alert = new Alert(Alert.AlertType.CONFIRMATION,\"\",new ButtonType(\"退出登录\"),new ButtonType(\"取消\"));\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"确定退出登录？将会关闭所有房间。\");\r\n            var ret = alert.showAndWait();\r\n            if(ret.isPresent() && ret.get().getText().equals(\"退出登录\")) {\r\n                Message message = new Message();\r\n                message.command = \"log_out \" + username;\r\n                MessageSender.sendMessage(message);\r\n                LoginController.stage.show();\r\n            }else {\r\n                e.consume();\r\n            }\r\n        });\r\n        this.username = ((String) ((Map<?, ?>) root.getScene().getUserData()).get(\"username\"));\r\n        EditContainerController.stage = stage;\r\n        FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource(\"editor_tab.fxml\"));\r\n\r\n        try {\r\n            Tab tab = fxmlLoader.load();\r\n            var controller = (EditorTabController) fxmlLoader.getController();\r\n            var map = new HashMap<String,Object>();\r\n            map.put(\"controller\",controller);\r\n            tab.setUserData(map);\r\n            controller.textArea_editor.textProperty().addListener(controller.textChanged);\r\n            tabPane_container.getTabs().add(tab);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/workonline/desktop/EditContainerController.java b/src/main/java/com/workonline/desktop/EditContainerController.java
--- a/src/main/java/com/workonline/desktop/EditContainerController.java	
+++ b/src/main/java/com/workonline/desktop/EditContainerController.java	
@@ -1,6 +1,7 @@
 package com.workonline.desktop;
 
 import com.workonline.util.Message;
+import com.workonline.util.Text_Operation;
 import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
 import javafx.scene.control.*;
@@ -60,6 +61,7 @@
                 tab.setText(String.valueOf(roomid));
                 EditorTabController controller = fxmlLoader.getController();
                 controller.roomid = roomid;
+                controller.version = 0;
                 controller.label_room_id.setText("房间ID："+roomid);
                 controller.label_room_people.setText("");
                 controller.is_owner = true;
@@ -73,13 +75,17 @@
             }
         });
         MessageReceiver.r_commands.put("enter_room_success",(commands, message) -> {
-            int roomid = Integer.getInteger(commands[1]);
+            int version = Integer.getInteger(commands[1]);
+            int roomid = Integer.getInteger(commands[2]);
+            String document = commands[3];
             FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("editor_tab.fxml"));
             try {
                 EditorTabController controller = fxmlLoader.getController();
                 Tab tab = fxmlLoader.load();
                 tab.setText(String.valueOf(roomid));
                 controller.roomid = roomid;
+                controller.version = version;
+                controller.textArea_editor.setText(document);
                 controller.label_room_id.setText("房间ID："+roomid);
                 controller.label_room_people.setText("");
                 var map = new HashMap<String,Object>();
@@ -109,6 +115,25 @@
             tabPane_container.getTabs().remove(tab);
             tab_list.remove(roomid);
         });
+        MessageReceiver.r_commands.put("broadcast",(commands, message) -> {
+            int roomid = Integer.getInteger(commands[1]);
+            Text_Operation textOperation = message.operation;
+            String username = textOperation.username;
+            FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("editor_tab.fxml"));
+            try {
+                EditorTabController controller = fxmlLoader.getController();
+                if(username.equals(controller.username)  && roomid == controller.roomid)
+                {
+                    controller.serverAcknowledged();
+                }
+                else
+                {
+                    controller.applyServer(textOperation.operation);
+                }
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        });
     }
 
 
