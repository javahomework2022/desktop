Index: src/main/java/com/workonline/desktop/EditorTabController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.workonline.desktop;\r\n\r\n\r\nimport javafx.beans.InvalidationListener;\r\nimport javafx.beans.value.ChangeListener;\r\nimport javafx.beans.value.ObservableValue;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.Tab;\r\nimport javafx.scene.control.TextArea;\r\nimport javafx.scene.layout.AnchorPane;\r\n\r\npublic class EditorTabController {\r\n\r\n    public boolean is_owner = false;\r\n    public int roomid = 0;\r\n\r\n    @FXML\r\n    public Tab root;\r\n\r\n    @FXML\r\n    public TextArea textArea_editor;\r\n\r\n    @FXML\r\n    public Label label_room_id,label_room_people;\r\n    public ChangeListener<? super String> textChanged = new ChangeListener<String>() {\r\n        @Override\r\n        public void changed(ObservableValue<? extends String> observableValue, String s, String t1) {\r\n\r\n            System.out.println(\"Text Changed\");\r\n            System.out.println(s);\r\n            System.out.println(t1);\r\n        }\r\n    };\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/workonline/desktop/EditorTabController.java b/src/main/java/com/workonline/desktop/EditorTabController.java
--- a/src/main/java/com/workonline/desktop/EditorTabController.java	
+++ b/src/main/java/com/workonline/desktop/EditorTabController.java	
@@ -1,6 +1,7 @@
 package com.workonline.desktop;
 
 
+import com.workonline.util.Operation;
 import javafx.beans.InvalidationListener;
 import javafx.beans.value.ChangeListener;
 import javafx.beans.value.ObservableValue;
@@ -24,12 +25,32 @@
     @FXML
     public Label label_room_id,label_room_people;
     public ChangeListener<? super String> textChanged = new ChangeListener<String>() {
+        int cnt =0;
         @Override
-        public void changed(ObservableValue<? extends String> observableValue, String s, String t1) {
+        public void changed(ObservableValue<? extends String> observableValue, String s, String t) {
 
-            System.out.println("Text Changed");
+            cnt++;
+            System.out.println("Text Changed"+cnt);
             System.out.println(s);
-            System.out.println(t1);
+            System.out.println(t);
+            Operation operation = new Operation();
+            int s_length = s.length(),t_length = t.length();
+            int retain_len=0;
+            for(int i=0;i<s_length && i<t_length;i++)
+            {
+                if(s.charAt(i) == t.charAt(i))
+                {
+                    //System.out.println(s.charAt(i)+" "+t.charAt(i));
+                    retain_len ++;
+                }
+            }
+            String delete_string = s.substring(retain_len-1);
+            String insert_string = t.substring(retain_len-1);
+            operation.retain(retain_len-1);
+            operation.delete(delete_string);
+            operation.insert(insert_string);
+            System.out.println(operation.getOperations());
         }
     };
+
 }
\ No newline at end of file
